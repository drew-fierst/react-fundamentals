{"ast":null,"code":"import _objectSpread from \"d:\\\\CoursewareDevelopment\\\\ReactFundamentals\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"d:\\\\CoursewareDevelopment\\\\ReactFundamentals\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\CoursewareDevelopment\\\\ReactFundamentals\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\CoursewareDevelopment\\\\ReactFundamentals\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\CoursewareDevelopment\\\\ReactFundamentals\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\CoursewareDevelopment\\\\ReactFundamentals\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\CoursewareDevelopment\\\\ReactFundamentals\\\\Demos\\\\Lesson11\\\\react-fundamentals\\\\src\\\\containers\\\\Board\\\\NewMember.js\";\nimport React, { Component } from 'react';\nimport styles from './NewMember.module.css'; // import axios from 'axios';\n\nimport { toast } from 'react-toastify';\nimport formBuilder from '../../formBuilder';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions';\n\nvar NewMember =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NewMember, _Component);\n\n  function NewMember() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewMember);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewMember)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      memberForm: {\n        firstName: formBuilder.configInput('input', 'text', 'First Name', null, {\n          required: true\n        }),\n        lastName: formBuilder.configInput('input', 'text', 'Last Name', null, {\n          required: true,\n          minLength: 2\n        }),\n        title: formBuilder.configInput('input', 'text', 'Title', null, {\n          required: true\n        }),\n        email: formBuilder.configInput('input', 'email', 'Email'),\n        hireDate: formBuilder.configInput('input', 'date', 'Hire Date'),\n        bio: formBuilder.configInput('textarea', '', 'Bio', 'summarize professional experience')\n      }\n    };\n\n    _this.inputChangedHandler = function (evt, id) {\n      var updatedForm = _objectSpread({}, _this.state.memberForm);\n\n      var updatedElement = updatedForm[id];\n      updatedElement.value = evt.target.value;\n      formBuilder.checkValidity(updatedElement);\n      updatedForm[id] = updatedElement;\n\n      _this.setState({\n        memberForm: updatedForm\n      });\n    };\n\n    _this.postDataHandler = function (evt) {\n      evt.preventDefault();\n      var hasError = false;\n\n      for (var elt in _this.state.memberForm) {\n        formBuilder.checkValidity(_this.state.memberForm[elt]);\n\n        if (!_this.state.memberForm[elt].valid) {\n          hasError = true;\n        }\n      }\n\n      if (hasError) {\n        _this.forceUpdate();\n\n        toast.error('you must properly fill out the form');\n        return;\n      }\n\n      var data = {\n        firstName: _this.state.memberForm.firstName.value,\n        lastName: _this.state.memberForm.lastName.value,\n        title: _this.state.memberForm.title.value,\n        bio: _this.state.memberForm.bio.value\n      }; // axios.post('/boardmembers', data)\n      // \t.then(resp => {\n      // \t\tconsole.log(resp);\n      // \t})\n      // \t.catch(err => {\n      // \t  toast.error(err.toString());\n      // \t});\n    };\n\n    return _this;\n  }\n\n  _createClass(NewMember, [{\n    key: \"render\",\n    value: function render() {\n      var formContent = formBuilder.buildForm(this.state.memberForm, this.inputChangedHandler);\n      return React.createElement(\"div\", {\n        className: styles.newMember,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Add a Board Member\"), React.createElement(\"form\", {\n        onSubmit: this.postDataHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, formContent, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Add Member\")));\n    }\n  }]);\n\n  return NewMember;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSave: function onSave(member) {\n      return dispatch(actions.ad);\n    }\n  };\n};\n\nexport default NewMember;","map":{"version":3,"sources":["d:\\CoursewareDevelopment\\ReactFundamentals\\Demos\\Lesson11\\react-fundamentals\\src\\containers\\Board\\NewMember.js"],"names":["React","Component","styles","toast","formBuilder","connect","actions","NewMember","state","memberForm","firstName","configInput","required","lastName","minLength","title","email","hireDate","bio","inputChangedHandler","evt","id","updatedForm","updatedElement","value","target","checkValidity","setState","postDataHandler","preventDefault","hasError","elt","valid","forceUpdate","error","data","formContent","buildForm","newMember","mapDispatchToProps","dispatch","onSave","member","ad"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styles from './NewMember.module.css';\r\n// import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport formBuilder from '../../formBuilder';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions';\r\n\r\nclass NewMember extends Component {\r\n\tstate = {\r\n\t\tmemberForm: {\r\n\t\t\tfirstName: formBuilder.configInput('input', 'text', 'First Name', null, {required: true}),\r\n\t\t\tlastName: formBuilder.configInput('input', 'text', 'Last Name', null, {required: true, minLength: 2}),\r\n\t\t\ttitle: formBuilder.configInput('input', 'text', 'Title', null, {required: true}),\r\n\t\t\temail: formBuilder.configInput('input', 'email', 'Email'),\r\n\t\t\thireDate: formBuilder.configInput('input', 'date', 'Hire Date'),\r\n\t\t\tbio: formBuilder.configInput('textarea', '', 'Bio', 'summarize professional experience')\r\n\t\t}\r\n\t}\r\n\r\n\tinputChangedHandler = (evt, id) => {\r\n\t\tconst updatedForm = { ...this.state.memberForm };\r\n\t\t\r\n\t\tconst updatedElement = updatedForm[id];\r\n\t\tupdatedElement.value = evt.target.value;\r\n\t\tformBuilder.checkValidity(updatedElement);\r\n\r\n\t\tupdatedForm[id] = updatedElement;\r\n\t\tthis.setState({ memberForm: updatedForm });\r\n\t};\r\n\r\n\tpostDataHandler = (evt) => {\r\n\t\tevt.preventDefault();\r\n\r\n\t\tlet hasError = false;\r\n\t\tfor (let elt in this.state.memberForm) {\r\n\t\t\tformBuilder.checkValidity(this.state.memberForm[elt]);\r\n\t\t\tif (!this.state.memberForm[elt].valid) {\r\n\t\t\t\thasError = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (hasError) {\r\n\t\t\tthis.forceUpdate();\r\n\t\t\ttoast.error('you must properly fill out the form');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst data = {\r\n\t\t\tfirstName: this.state.memberForm.firstName.value,\r\n\t\t\tlastName: this.state.memberForm.lastName.value,\r\n\t\t\ttitle: this.state.memberForm.title.value,\r\n\t\t\tbio: this.state.memberForm.bio.value\r\n\t\t};\r\n\t\t// axios.post('/boardmembers', data)\r\n\t\t// \t.then(resp => {\r\n\t\t// \t\tconsole.log(resp);\r\n\t\t// \t})\r\n\t\t// \t.catch(err => {\r\n\t\t// \t  toast.error(err.toString());\r\n\t\t// \t});\r\n\t};\r\n\r\n\trender () {\r\n\t\tconst formContent = formBuilder.buildForm(this.state.memberForm, this.inputChangedHandler);\r\n\r\n\t\treturn (\r\n\t\t\t<div className={styles.newMember}>\r\n\t\t\t\t<h1>Add a Board Member</h1>\r\n\t\t\t\t<form onSubmit={this.postDataHandler}>\r\n\t\t\t\t\t{formContent}\r\n\t\t\t\t\t<button>Add Member</button>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonSave: (member) => dispatch(actions.ad)\r\n\t}\r\n}\r\nexport default NewMember;\r\n"]},"metadata":{},"sourceType":"module"}