{"ast":null,"code":"import _objectSpread from \"d:\\\\CoursewareDevelopment\\\\ReactFundamentals\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions/actionTypes';\nvar initialState = {\n  counter: 0\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      return _objectSpread({}, state, {\n        counter: state.counter + 1\n      });\n\n    case actionTypes.ADD:\n      return _objectSpread({}, state, {\n        counter: state.counter + action.payload\n      });\n\n    case actionr:\n      return _objectSpread({}, state, {\n        counter: state.counter - 1\n      });\n\n    case 'SUBTRACT':\n      return _objectSpread({}, state, {\n        counter: state.counter - action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["d:\\CoursewareDevelopment\\ReactFundamentals\\Demos\\Lesson10\\react-fundamentals\\src\\store\\reducers\\counter.js"],"names":["actionTypes","initialState","counter","reducer","state","action","type","INCREMENT","ADD","payload","actionr"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,IAAMC,YAAY,GAAG;AACpBC,EAAAA,OAAO,EAAE;AADW,CAArB;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKN,WAAW,CAACO,SAAjB;AACC,+BAAYH,KAAZ;AAAmBF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAA5C;;AACD,SAAKF,WAAW,CAACQ,GAAjB;AACC,+BAAYJ,KAAZ;AAAmBF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACI;AAAnD;;AACD,SAAKC,OAAL;AACC,+BAAYN,KAAZ;AAAmBF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAA5C;;AACD,SAAK,UAAL;AACC,+BAAYE,KAAZ;AAAmBF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACI;AAAnD;;AACD;AACC,aAAOL,KAAP;AAVF;AAYA,CAbD;;AAeA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n\tcounter: 0\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase actionTypes.INCREMENT:\r\n\t\t\treturn { ...state, counter: state.counter + 1 };\r\n\t\tcase actionTypes.ADD:\r\n\t\t\treturn { ...state, counter: state.counter + action.payload };\r\n\t\tcase actionr:\r\n\t\t\treturn { ...state, counter: state.counter - 1 };\r\n\t\tcase 'SUBTRACT':\r\n\t\t\treturn { ...state, counter: state.counter - action.payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}