{"ast":null,"code":"import _classCallCheck from \"d:\\\\CoursewareDevelopment\\\\ReactFundamentals\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"d:\\\\CoursewareDevelopment\\\\ReactFundamentals\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"d:\\\\CoursewareDevelopment\\\\ReactFundamentals\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"d:\\\\CoursewareDevelopment\\\\ReactFundamentals\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"d:\\\\CoursewareDevelopment\\\\ReactFundamentals\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"d:\\\\CoursewareDevelopment\\\\ReactFundamentals\\\\Demos\\\\Lesson10\\\\react-fundamentals\\\\src\\\\containers\\\\Counter\\\\Counter.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CounterControl from '../../components/Counter/CounterControl';\nimport CounterOutput from '../../components/Counter/CounterOutput';\n\nvar Counter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Counter, _Component);\n\n  function Counter() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Counter);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Counter)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      counter: 0\n    };\n\n    _this.counterChangedHandler = function (action, value) {\n      // eslint-disable-next-line default-case\n      switch (action) {\n        case 'inc':\n          _this.setState(function (prevState) {\n            return {\n              counter: prevState.counter + 1\n            };\n          });\n\n          break;\n\n        case 'dec':\n          _this.setState(function (prevState) {\n            return {\n              counter: prevState.counter - 1\n            };\n          });\n\n          break;\n\n        case 'add':\n          _this.setState(function (prevState) {\n            return {\n              counter: prevState.counter + value\n            };\n          });\n\n          break;\n\n        case 'sub':\n          _this.setState(function (prevState) {\n            return {\n              counter: prevState.counter - value\n            };\n          });\n\n          break;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Counter, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"This screen exists as another possible demo to use Redux\"), React.createElement(CounterOutput, {\n        value: this.props.counter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(CounterControl, {\n        label: \"Increment\",\n        clicked: function clicked() {\n          return _this2.counterChangedHandler('inc');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(CounterControl, {\n        label: \"Decrement\",\n        clicked: function clicked() {\n          return _this2.counterChangedHandler('dec');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(CounterControl, {\n        label: \"Add 5\",\n        clicked: function clicked() {\n          return _this2.counterChangedHandler('add', 5);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(CounterControl, {\n        label: \"Subtract 5\",\n        clicked: function clicked() {\n          return _this2.counterChangedHandler('sub', 5);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Counter;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    counter: state.counter\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIncrement: function onIncrement() {\n      return dispatch({\n        type: 'INCREMENT'\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"sources":["d:\\CoursewareDevelopment\\ReactFundamentals\\Demos\\Lesson10\\react-fundamentals\\src\\containers\\Counter\\Counter.js"],"names":["React","Component","connect","CounterControl","CounterOutput","Counter","state","counter","counterChangedHandler","action","value","setState","prevState","props","mapStateToProps","mapDispatchToProps","dispatch","onIncrement","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CounterControl from '../../components/Counter/CounterControl';\r\nimport CounterOutput from '../../components/Counter/CounterOutput';\r\n\r\nclass Counter extends Component {\r\n\tstate = {\r\n\t\tcounter: 0\r\n\t}\r\n\r\n\tcounterChangedHandler = ( action, value ) => {\r\n\t\t// eslint-disable-next-line default-case\r\n\t\tswitch ( action ) {\r\n\t\t\tcase 'inc':\r\n\t\t\t\tthis.setState( ( prevState ) => { return { counter: prevState.counter + 1 } } )\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dec':\r\n\t\t\t\tthis.setState( ( prevState ) => { return { counter: prevState.counter - 1 } } )\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'add':\r\n\t\t\t\tthis.setState( ( prevState ) => { return { counter: prevState.counter + value } } )\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sub':\r\n\t\t\t\tthis.setState( ( prevState ) => { return { counter: prevState.counter - value } } )\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<p>This screen exists as another possible demo to use Redux</p>\r\n\t\t\t\t<CounterOutput value={this.props.counter} />\r\n\t\t\t\t<CounterControl label=\"Increment\" clicked={() => this.counterChangedHandler( 'inc' )} />\r\n\t\t\t\t<CounterControl label=\"Decrement\" clicked={() => this.counterChangedHandler( 'dec' )}  />\r\n\t\t\t\t<CounterControl label=\"Add 5\" clicked={() => this.counterChangedHandler( 'add', 5 )}  />\r\n\t\t\t\t<CounterControl label=\"Subtract 5\" clicked={() => this.counterChangedHandler( 'sub', 5 )}  />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\treturn {\r\n\t\tcounter: state.counter\r\n\t}\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n\treturn {\r\n\t\tonIncrement: () => dispatch({type: 'INCREMENT'})\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\r\n"]},"metadata":{},"sourceType":"module"}