{"ast":null,"code":"var _jsxFileName = \"d:\\\\CoursewareDevelopment\\\\ReactFundamentals\\\\Demos\\\\Lesson09\\\\react-fundamentals\\\\src\\\\components\\\\Forms\\\\Input.js\";\nimport React from 'react';\nimport styles from './Input.module.css';\n\nvar input = function input(props) {\n  var elem = null;\n  var classes = [];\n  if (props.attrs.className) classes.push(props.attrs.className.replace('invalid', '').trim());\n  if (props.valid === false) classes.push('invalid');\n  props.attrs.className = classes.join(' ').trim();\n\n  switch (props.kind) {\n    case 'textarea':\n      elem = React.createElement(\"textarea\", Object.assign({}, props.attrs, {\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }));\n      break;\n\n    default:\n      elem = React.createElement(\"input\", Object.assign({}, props.attrs, {\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }));\n  }\n\n  var errors = [];\n\n  if (props.errors) {\n    for (var key in props.errors) {\n      errors.push(props.errors[key]);\n    }\n  }\n\n  var errorContent = null;\n\n  if (errors.length) {\n    errorContent = React.createElement(\"ul\", {\n      className: \"validation-errors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"errors.map()\");\n  }\n\n  return React.createElement(\"div\", {\n    className: styles.input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, props.label), elem);\n};\n\nexport default input;","map":{"version":3,"sources":["d:\\CoursewareDevelopment\\ReactFundamentals\\Demos\\Lesson09\\react-fundamentals\\src\\components\\Forms\\Input.js"],"names":["React","styles","input","props","elem","classes","attrs","className","push","replace","trim","valid","join","kind","changed","errors","key","errorContent","length","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AACxB,MAAIC,IAAI,GAAG,IAAX;AAEA,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAIF,KAAK,CAACG,KAAN,CAAYC,SAAhB,EAA2BF,OAAO,CAACG,IAAR,CAAaL,KAAK,CAACG,KAAN,CAAYC,SAAZ,CAAsBE,OAAtB,CAA8B,SAA9B,EAAyC,EAAzC,EAA6CC,IAA7C,EAAb;AAC3B,MAAIP,KAAK,CAACQ,KAAN,KAAgB,KAApB,EAA2BN,OAAO,CAACG,IAAR,CAAa,SAAb;AAC3BL,EAAAA,KAAK,CAACG,KAAN,CAAYC,SAAZ,GAAwBF,OAAO,CAACO,IAAR,CAAa,GAAb,EAAkBF,IAAlB,EAAxB;;AAEA,UAAQP,KAAK,CAACU,IAAd;AACC,SAAM,UAAN;AACCT,MAAAA,IAAI,GAAG,kDAAcD,KAAK,CAACG,KAApB;AAA2B,QAAA,QAAQ,EAAEH,KAAK,CAACW,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACA;;AACD;AACCV,MAAAA,IAAI,GAAG,+CAAWD,KAAK,CAACG,KAAjB;AAAwB,QAAA,QAAQ,EAAEH,KAAK,CAACW,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AALF;;AAQA,MAAMC,MAAM,GAAG,EAAf;;AACA,MAAIZ,KAAK,CAACY,MAAV,EAAkB;AACjB,SAAK,IAAIC,GAAT,IAAgBb,KAAK,CAACY,MAAtB,EAA8B;AAC7BA,MAAAA,MAAM,CAACP,IAAP,CAAYL,KAAK,CAACY,MAAN,CAAaC,GAAb,CAAZ;AACA;AACD;;AACD,MAAIC,YAAY,GAAG,IAAnB;;AACA,MAAIF,MAAM,CAACG,MAAX,EAAmB;AAClBD,IAAAA,YAAY,GAAI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAhB;AAGA;;AAED,SACC;AAAK,IAAA,SAAS,EAAEhB,MAAM,CAACC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQC,KAAK,CAACgB,KAAd,CADD,EAEEf,IAFF,CADD;AAMA,CAnCD;;AAqCA,eAAeF,KAAf","sourcesContent":["import React from 'react';\r\nimport styles from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n\tlet elem = null;\r\n\r\n\tconst classes = [];\r\n\tif (props.attrs.className) classes.push(props.attrs.className.replace('invalid', '').trim());\r\n\tif (props.valid === false) classes.push('invalid');\r\n\tprops.attrs.className = classes.join(' ').trim();\r\n\r\n\tswitch (props.kind) {\r\n\t\tcase ('textarea'):\r\n\t\t\telem = <textarea {...props.attrs} onChange={props.changed} />\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\telem = <input {...props.attrs} onChange={props.changed} />\r\n\t}\r\n\r\n\tconst errors = [];\r\n\tif (props.errors) {\r\n\t\tfor (let key in props.errors) {\r\n\t\t\terrors.push(props.errors[key]);\r\n\t\t}\r\n\t}\r\n\tlet errorContent = null;\r\n\tif (errors.length) {\r\n\t\terrorContent = (<ul className=\"validation-errors\">\r\n\t\t\terrors.map()\r\n\t\t</ul>);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.input}>\r\n\t\t\t<label>{props.label}</label>\r\n\t\t\t{elem}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default input;\r\n"]},"metadata":{},"sourceType":"module"}