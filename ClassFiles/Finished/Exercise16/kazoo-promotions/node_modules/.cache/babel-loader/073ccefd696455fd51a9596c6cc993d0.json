{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\drew\\\\source\\\\repos\\\\Courseware\\\\ReactFundamentals\\\\ClassFiles\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\drew\\\\source\\\\repos\\\\Courseware\\\\ReactFundamentals\\\\ClassFiles\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\drew\\\\source\\\\repos\\\\Courseware\\\\ReactFundamentals\\\\ClassFiles\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\drew\\\\source\\\\repos\\\\Courseware\\\\ReactFundamentals\\\\ClassFiles\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\drew\\\\source\\\\repos\\\\Courseware\\\\ReactFundamentals\\\\ClassFiles\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\drew\\\\source\\\\repos\\\\Courseware\\\\ReactFundamentals\\\\ClassFiles\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\drew\\\\source\\\\repos\\\\Courseware\\\\ReactFundamentals\\\\ClassFiles\\\\Finished\\\\Exercise16\\\\kazoo-promotions\\\\src\\\\components\\\\Contact\\\\BookingForm.js\";\nimport React, { Component } from 'react';\nimport styles from './BookingForm.module.css';\nimport formBuilder from '../../formBuilder';\nimport { toast } from 'react-toastify';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as actions from '../../store/actions';\n\nvar BookingForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BookingForm, _Component);\n\n  function BookingForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BookingForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BookingForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      requestForm: {\n        name: formBuilder.configInput('input', 'text', 'Name', null, {\n          required: true\n        }),\n        email: formBuilder.configInput('input', 'email', 'Email', null, {\n          required: true\n        }),\n        eventType: formBuilder.configInput('input', 'text', 'Type of Event', null, {\n          required: true\n        }),\n        eventDate: formBuilder.configInput('input', 'date', 'Event Date', null, {\n          required: true,\n          minValue: new Date()\n        }),\n        numGuests: formBuilder.configInput('input', 'number', '# Guests', null, {\n          required: true,\n          minValue: 10\n        }),\n        requests: formBuilder.configInput('textarea', '', 'Special Requests')\n      }\n    };\n\n    _this.inputChangedHandler = function (evt, id) {\n      var updatedForm = _objectSpread({}, _this.state.requestForm);\n\n      var updatedElement = updatedForm[id];\n      updatedElement.value = evt.target.value;\n      formBuilder.checkValidity(updatedElement);\n      updatedForm[id] = updatedElement;\n\n      _this.setState({\n        requestForm: updatedForm\n      });\n    };\n\n    _this.postDataHandler = function (evt) {\n      evt.preventDefault();\n\n      if (formBuilder.validateForm(_this.state.requestForm)) {\n        _this.props.clearArtist();\n\n        toast.info('Thank you. Your request has been sent');\n      } else {\n        _this.forceUpdate(); //necessary b/c validateForm mutates existing state directly\n\n\n        toast.error('you must properly fill out the form');\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(BookingForm, [{\n    key: \"render\",\n    value: function render() {\n      var formContent = formBuilder.buildForm(this.state.requestForm, this.inputChangedHandler);\n      var content = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Please \", React.createElement(Link, {\n        to: \"/talent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"select the artist\"), \" you wish to perform.\");\n\n      if (this.props.selectedArtist) {\n        content = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, \"for \", this.props.selectedArtist.name), React.createElement(\"form\", {\n          className: styles.request,\n          onSubmit: this.postDataHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, formContent, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"Send Request\")));\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Event Request\"), content);\n    }\n  }]);\n\n  return BookingForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    selectedArtist: state.bookingRequest.artist\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    clearArtist: function clearArtist() {\n      return dispatch(actions.clearArtist());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingForm);","map":{"version":3,"sources":["C:\\Users\\drew\\source\\repos\\Courseware\\ReactFundamentals\\ClassFiles\\Finished\\Exercise16\\kazoo-promotions\\src\\components\\Contact\\BookingForm.js"],"names":["React","Component","styles","formBuilder","toast","connect","Link","actions","BookingForm","state","requestForm","name","configInput","required","email","eventType","eventDate","minValue","Date","numGuests","requests","inputChangedHandler","evt","id","updatedForm","updatedElement","value","target","checkValidity","setState","postDataHandler","preventDefault","validateForm","props","clearArtist","info","forceUpdate","error","formContent","buildForm","content","selectedArtist","request","mapStateToProps","bookingRequest","artist","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styles from './BookingForm.module.css';\r\nimport formBuilder from '../../formBuilder';\r\nimport { toast } from 'react-toastify';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport * as actions from '../../store/actions';\r\n\r\nclass BookingForm extends Component {\r\n  state = {\r\n    requestForm: {\r\n      name: formBuilder.configInput('input', 'text', 'Name', null, {required: true}),\r\n      email: formBuilder.configInput('input', 'email', 'Email', null, {required: true}),\r\n      eventType: formBuilder.configInput('input', 'text', 'Type of Event', null, {required: true}),\r\n\t\t\teventDate: formBuilder.configInput('input', 'date', 'Event Date', null, { required: true, minValue: new Date()}),\r\n      numGuests: formBuilder.configInput('input', 'number', '# Guests', null, {required: true, minValue: 10}),\r\n      requests: formBuilder.configInput('textarea', '', 'Special Requests')\r\n    }\r\n  };\r\n\r\n  inputChangedHandler = (evt, id) => {\r\n    const updatedForm = { ...this.state.requestForm };\r\n\r\n    const updatedElement = updatedForm[id];\r\n    updatedElement.value = evt.target.value;\r\n    formBuilder.checkValidity(updatedElement);\r\n\r\n    updatedForm[id] = updatedElement;\r\n    this.setState({ requestForm: updatedForm });\r\n  };\r\n\r\n  postDataHandler = evt => {\r\n    evt.preventDefault();\r\n\r\n\t\tif (formBuilder.validateForm(this.state.requestForm)) {\r\n\t\t\tthis.props.clearArtist();\r\n\t\t\ttoast.info('Thank you. Your request has been sent');\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.forceUpdate();\t//necessary b/c validateForm mutates existing state directly\r\n\t\t\ttoast.error('you must properly fill out the form');\r\n\t\t}\r\n  };\r\n\r\n  render() {\r\n\t\tconst formContent = formBuilder.buildForm(this.state.requestForm, this.inputChangedHandler);\r\n\t\tlet content = (<p>Please <Link to=\"/talent\">select the artist</Link> you wish to perform.</p>);\r\n\t\tif (this.props.selectedArtist) {\r\n\t\t\tcontent = <div>\r\n\t\t\t\t\t<h2>for {this.props.selectedArtist.name}</h2>\r\n\t\t\t\t\t<form className={styles.request} onSubmit={this.postDataHandler}>\r\n\t\t\t\t\t\t{formContent}\r\n\t\t\t\t\t\t<button>Send Request</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>;\r\n\t\t}\r\n\r\n    return (\r\n      <div>\r\n        <h2>Event Request</h2>\r\n\t\t\t\t{content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tselectedArtist: state.bookingRequest.artist\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tclearArtist: () => dispatch(actions.clearArtist())\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingForm);\r\n"]},"metadata":{},"sourceType":"module"}